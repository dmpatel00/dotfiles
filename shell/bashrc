# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi

PATH=$HOME/VASP/vtstscripts-901:$PATH
export PATH
FTP=$HOME/FTP/
export FTP

export PERL_BADLANG=0
export LC_ALL=en_US.utf8
HISTSIZE=10000000
HISTFILESIZE=10000000

#Tab Complete
#bind 'TAB:menu-complete' #terrible no vim
#bind '"\e[Z":menu-complete-backward'
bind 'set show-all-if-ambiguous on'
#Load gnureadline
module load libreadline
export INPUTRC=/home/cat/dmapa/.inputrc
# custom module folder
module use /home/cat/projects/software/modules/all/
# Energy modules
#module use /home/modules/energy/modules/all

########################
# SECTION 3
#
# Controling the prompt: Suppose you want stampede1(14)$  instead of
# login1.stampede(14)$
#
if [ -n "$PS1" ]; then
   myhost=$(hostname -f)              # get the full hostname
   myhost=${myhost%.fysik.dtu.dk}  # remove .tacc.utexas.edu
   first=${myhost%%.*}                # get the 1st name (e.g. login1)
   SYSHOST=${myhost#*.}               # get the 2nd name (e.g. stampede)
   first5=$(expr substr $first 1 5)   # get first 5 character from $first
   if [ "$first5" = "login" ]; then
     num=$(expr $first : '[^0-9]*\([0-9]*\)') # get the number
     HOST=${SYSHOST}$num                      # HOST -> stampede1
   else
     # first is not login1 so take first letter of system name
     L=$(expr substr $SYSHOST 1 1 | tr '[:lower:]' '[:upper:]')

     #  If host is c521-101.stampeded then
     HOST=$L$first      # HOST  -> Sc521-101
   fi
HOST=$first
#\[\e[31m\][\[\e[m\]
#PS1='\[\e[31m\][\[\e[m\]\[\e[33m\]\u\[\e[m\]\[\e[32m\]@\[\e[m\]\[\e[34m\]$HOST\[\e[m\]\[\e[31m\]]\[\e[m\](\#)$ '
PS1='\[\e[31m\][\[\e[m\]\[\e[33m\]\u\[\e[m\]\[\e[32m\]@\[\e[m\]\[\e[34m\]$HOST\[\e[m\] \[\e[35m\]\w\[\e[m\]\[\e[31m\]]\[\e[m\](\#)$ '
export PROMPT_DIRTRIM=3
  #\e[31m\]]\[\e[m\](\#)$ '   # Prompt either stampede1(14)$ or Sc521-101(14)$
fi
source ~/.config/shell/dircolors
 #LS_COLORS='rs=0:di=38;5;33:ln=38;5;51:mh=00:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=01;25;37;41:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;40:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.zst=38;5;9:*.tzst=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.wim=38;5;9:*.swm=38;5;9:*.dwm=38;5;9:*.esd=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.mjpg=38;5;13:*.mjpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.m4a=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.oga=38;5;45:*.opus=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:';
 #export $LS_COLORS
 #export CLICOLOR=1 zsh
 
#####################################################################
# ****                    ALIASES                                ****
#####################################################################

 set -o vi
 alias xclip="xclip -selection c"
# alias m="more"
# alias bls='/bin/ls'   # handy alias for listing a large directory.
 alias uq='squeue --me -o "%.18i  %.9P    %.40j   %.V     %.10M   %.9l    %.6D  %.6C  %R      %S     %Q"'
 alias jobdirs='squeue --me -o "%.18i  %.9P    %.30j   %.V    %.10M   %Z "'
 alias jobcommands='squeue --me -o "%.18i  %.9P    %.30j   %.V    %.10M   %o "'
 alias jobendtimes='squeue --me -o "%.18i  %.9P    %.30j   %.V    %.10M   %e "| sort -k6 -r '
 alias gpuq='squeue -p a100,a100_week,sm3090el8,sm3090el8_768,sm3090_devel -o "%.18i  %.9P    %.40j   %.8u   %.V     %.10M   %.9l    %.6D  %.6C  %R      %S     %Q" '
 alias aq='squeue -A catvip -o "%.18i  %.9P    %.30j   %.8u    %.V     %.10M   %.9l    %.6D    %R      %S"'
 alias qinfo='sinfo -S+P -o "%18P %8a %20F"'
 alias priorities='squeue -o "%.18i  %.9P    %.30j    %.8u    %.V     %.10M   %.9l    %.6D    %R    %Q"'
 alias showcpu='showuserlimits | grep cpu'
 alias nodestatus='pestat -u $USER -N'

 alias bohr='printf "1.88972613\n"'
 alias hartree='printf "27.21139\n"'
 alias kB='printf ".000086173303372\n"'

 alias vfor='grep FORCES: OUTCAR'
 alias ven='grep --no-group-separator -B 1 F= OSZICAR'
 alias jen='grep IonicMinimize *out'
 alias vclr='rm CHG CHGCAR DOSCAR EIGENVAL IBZKPT *o OSZICAR OUTCAR PCDAT RE* vasprun.xml WAVECAR XDATCAR'
 alias cptemp='cp CONTCAR $FTP/temp.vasp'
 alias cpcontdir='for dir in *;do cp $dir/CONTCAR $HOME/$dir.vasp; done'
 alias sbv='sbatch vasp.sh'

 alias sbc='sbatch cpmd.sh'
 alias hillsheader='cat $WORK/Templates/plot/HILLS HILLS > HILLS.dat'

 #alias sba='sbatch ase.sh'
 alias nebplot='python3 ~/gpaw/scripts/nebplot.py'
 alias makenebgif='python3 ~/gpaw/scripts/makenebgif.py'
#####################################################################
# ****                       COMPLETION                          ****
#####################################################################
_venvnames='venv0 venvtest dipolarPoisson ase322venv'
complete -W "${_venvnames}" 'activate'
_partitions='xeon24el8_test xeon56 xeon40el8 epyc96 sm3090el8 a100 sm3090_devel'
complete -W "${_partitions}" 'squeue'
_plumed() { eval "$(plumed --no-mpi completion 2>/dev/null)";}
complete -F _plumed -o default plumed

#####################################################################
# ****                       FUNCTIONS                           ****
#####################################################################
function calc() {
        echo "scale=10; $1" | bc
}
function btoa() {
        echo "scale=10; $1/1.88972613" | bc
}
function atob() {
        echo "scale=10; $1*1.88972613" | bc
}
function potgen() {
	for i in "$@"
	do
        cat $HOME/VASP/POTCAR/potpaw_PBE.54/$i/POTCAR >> POTCAR
	done
}
function cpjdft() {
	cp $1/*.in $2
	cp $1/*.sh $2
	cp $1/*.ionpos $2
	cp $1/*.lattice $2
}
function cpvasp() {
	cp $1/INCAR $2
	cp $1/vasp.sh $2
	cp $1/POSCAR $2
	cp $1/POTCAR $2
	cp $1/KPOINTS $2
}
function cpdir() {
	for i in "$@"
	do 
		for dir in ./*/;
		do cp $i $dir;
 		done
	done
}
function cpmeta() {
	 cp HILLS $HOME;
	 cp COLVAR $HOME;
}
function cpcpmd() {
        cp $1/cpmd.sh $2
        cp $1/*inp $2
        cp $1/*psp $2
        cp $1/GEOMETRY.scale $2
        cp $1/GEOMETRY.vasp $2
        cp $1/LATEST $2
}
function vcnt() {
	cp POSCAR POSCAR.old
	mv CONTCAR POSCAR
	rm CHG
	sbatch vasp.sh
	vfor > forces.old
	mv OUTCAR OUTCAR.old
}
function gcnt() {
	cp out.log out.log.old
        grep -A 4 Converged? out.log  >> convergence
	sbatch gaussian.sh
}
function vSHE() {
	echo "scale=10; -1*(4.66+$1)/27.21139" | bc
}
function cpcont() {
	cp -T CONTCAR $HOME/$1
}
function runchmol() {
	cp $WORK/chargemol/chargemol.sh .
	cp $WORK/chargemol/job_control.txt .
	sbatch chargemol.sh
}
function backuprsync() {
	NOW=$(date +"%m%d%y")
	find $1 -name "WAVECAR" -o -name "*CHGCAR*" -o -name "CHG" -o -name "AEC*" -o -name "*wfns" -o -name "*.n" -o -name "*.fluidState" -o -name "LOCPOT" -o -name "*chk" -o -name "RESTART.1" -o -name "TRAJECTORY" -o -name "ENERGIES" > exclude.txt
	rsync -avh --exclude-from='exclude.txt' $1 $HOME/archives/
	rm exclude.txt
}
function rundir() {
	for dir  in ./*/
	do
        cd $dir
        sbatch *.sh
        cd ../
	done
}
function rundircnt() {
	for dir  in ./*/
	do
        cd $dir
        vcnt
        cd ../
	done
}
function gcmakedir() {
	electrons=`gawk '/NELECT/ {print $3}' OUTCAR`
	mkdir m10 m8 m6 m4 m2 p2 p4 p6 p8 p10
	for dir in m10 m8 m6 m4 m2 p2 p4 p6 p8 p10
		do cd $dir
		cpvasp ../ .
		pwd
		ncrement=`printf $dir | gawk -v x=$electrons 'gsub("m","-") gsub("p","") {print x+$1/10.0000}'`
		echo $ncrement 
		echo "NELECT="$ncrement >> INCAR
		cd ..
	done
}
function gc800() {
	sed -i 's/400/800/' INCAR
	sed -i 's/IBRION =1/IBRION =-1/' INCAR
	sed -i 's/NSW =1000/NSW =0/' INCAR
	sbv
	for dir in m10 m8 m6 m4 m2 p2 p4 p6 p8 #p10
		do cd $dir
		sed -i 's/400/800/' INCAR
		sed -i 's/IBRION =1/IBRION =-1/' INCAR
		sed -i 's/NSW =1000/NSW =0/' INCAR
		vcnt
		cd ../
	done
}
function gcdata() {
	ncrement=0.0
	gcfile=`grep -m1 'J' vasp.sh | awk '{print $3}'`
	Energy=`tac OUTCAR |grep -m1 sigma | awk '{print $7}'`
	Fermi=`grep -m1 E-fermi OUTCAR | awk  '{print $3}'`
	Phi=`tac *o |grep -m1 FERMI_SHIFT | awk '{print $3}'`
	if [ -z "${Phi}" ]
	then
		Phi=0
	fi
	echo "$ncrement,$Energy,$Fermi,$Phi" > $gcfile\_gc.dat
	array=(m* p*)
	for dir in "${array[@]}"
	do	
		ncrement=`printf $dir | gawk 'gsub("m","-") gsub("p","") {print $1/10.0000}'`
		Energy=`tac $dir/OUTCAR |grep -m1 sigma | awk '{print $7}'`
		Fermi=`grep -m1 E-fermi $dir/OUTCAR | awk  '{print $3}'`
		Phi=`tac $dir/*o |grep -m1 FERMI_SHIFT | awk '{print $3}'`
		if [ -z "${Phi}" ]
		then
			Phi=0
		fi
		echo "$ncrement,$Energy,$Fermi,$Phi" >> $gcfile\_gc.dat
	done
	#for dir in "${array[@]}"; do echo "$dir"; done
}
function capacitancedat() {
	capfile=`grep -m1 'J' ase.sh | awk '{print $3}'`
	echo "#$capfile" > capacitance.dat
	array=(V_*)
	for dir in "${array[@]}"
	do	
		potential=`printf $dir | gawk 'gsub("V_","") {print $1}'`
		Fermi=`tac $dir/OUTCAR| grep -m1 E-fermi | awk  '{print $3}'`
		nelectrons=`tac $dir/OUTCAR |grep -m1 "new NELECT" | awk '{print $7}'`
		capacitance=`tac $dir/OUTCAR |grep -m1 capacitance | awk '{print $3}'`
		echo "$potential,$nelectrons,$Fermi,$capacitance" >> capacitance.dat
	done
}

function gcextend() {
	electrons=`gawk '/NELECT/ {print $3}' OUTCAR`
	moveto=`echo $1 | awk '{print ($1*10)}'`
	moves=($(seq 15. 5. $moveto))
	#printf "m%s\n" "${moves[@]}"
	for num in ${moves[*]}
	do 
		dir="m""$num"
		if [ ! -d $dir ]
		then
			echo "$dir"
			mkdir "$dir"
			cd $dir
			cpvasp ../m10/ .
			sed -i 's/800/400/' INCAR
			sed -i 's/IBRION =-1/IBRION =1/' INCAR
			sed -i 's/NSW =0/NSW =1000/' INCAR
			sed -i '$ d' INCAR
			ncrement=`printf $dir | gawk -v x=$electrons 'gsub("m","-") gsub("p","") {print x+$1/10.0000}'`
			echo $ncrement 
			echo "NELECT="$ncrement >> INCAR
			sbatch vasp.sh
			cd ../	
		fi

	done

}
function gcex800() {
	for dir in "$@"
	do
		cd $dir
		echo $dir
		sed -i 's/400/800/' INCAR
		sed -i 's/IBRION =1/IBRION =-1/' INCAR
		sed -i 's/NSW =1000/NSW =0/' INCAR
		vcnt
		cd ../
	done
}
function generatereminder() {
	printf "printf '\e[1;31m" >> reminder
	printf "$@"  >> reminder
	printf "\e[0m \n'" >> reminder
	printf "\n" >> reminder
 	chmod +x reminder
	./reminder
}
function NEBcnt() {
	a=`grep IMAGES INCAR | awk '{print $3}'`
	for dir in $(seq -f "%02g" 1 $a);
		do cd $dir;
		mv CONTCAR POSCAR
		cd ../;
	done
	sbatch vasp.sh
}
function MLNEBcnt() {
	sed -i 's/linear/MLNEB_old.traj/' mlneb.py
	sed -i 's/idpp/MLNEB_old.traj/' mlneb.py
	mv MLNEB.traj MLNEB_old.traj
	ls mlneb_summary* | tac | while read f;do cp $f $f.old ;done
	sbatch ase.sh
}

function hills_sum() {
 /work2/06027/dmpatel/stampede2/plumed/bin/plumed sum_hills --hills HILLS.dat --mintozero --stride $1 --kt .00094997
}
function hills_sum_100() {
 /work2/06027/dmpatel/stampede2/plumed/bin/plumed sum_hills --hills HILLS.dat --mintozero --stride $1 --kt .00031665
}
function prog() {
	for dir in ./*/
		do echo $dir
		grep FORCES: $dir/OUTCAR
	done
}
function vendir() {
	for dir in ./*/
		do tac $dir/OUTCAR |grep -m1 sigma | awk '{print $7}'
	done
}
function cpgeo() {
	head -8 GEOMETRY.vasp > temp.vasp;
	tail -n +12 GEOMETRY.scale >> temp.vasp;
	mv temp.vasp GEOMETRY.vasp;
	cp GEOMETRY.vasp $HOME;
}
function vibsum() {
	grep 'f  =' OUTCAR | awk '{print $10}' > freq.dat
	freqs=`awk '{ sum += $1 } END { print sum }' freq.dat`
	energy=`printf $freqs | gawk '{print .5*$1/1000}'`
	echo $energy
}

function traj_to_vasp() {
	ase convert -f -n -1 *traj ${1:-temp}.vasp
}

function activate() {
	source ~/$1/bin/activate
}
function quickplot() {
	gnuplot -e "plot '$1' u 1:2; pause mouse"
}

function create_mlnebdir() {
	for dir in $(seq 2.40 0.5 4.40);
		do mkdir pot_$dir
		cp mlneb.py pot_$dir
		cp ase.sh pot_$dir
		sed -i "s/\-J.*$/&_$dir/" pot_$dir/ase.sh
	done
}
function get_path_electrons() {
	grep found path*txt | tac | sort -u -t. -k1,1 | gawk 'gsub("_[0-9].[0-9]{2}.txt:Potential","") gsub("path_","") {print $1 " " $8}' | sort -V
}

function traj_energy() {
	 ase ulm $1 | grep energy | gawk -F'[:*,]' '{print $2}'
}

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

